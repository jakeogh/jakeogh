EAPI=8
inherit cmake git-r3

DESCRIPTION="Multi-channel signed distance field atlas generator (live git)"
HOMEPAGE="https://github.com/Chlumsky/msdf-atlas-gen"
EGIT_REPO_URI="https://github.com/Chlumsky/msdf-atlas-gen.git"
EGIT_BRANCH="master"

LICENSE="MIT"
SLOT="0"
KEYWORDS=""
IUSE="+cli"

RDEPEND="
  media-libs/msdfgen
  media-libs/libpng:0=
  sys-libs/zlib
  dev-libs/tinyxml2
  media-libs/freetype:2
"
DEPEND="${RDEPEND}"
BDEPEND="dev-build/cmake"

src_prepare() {
    cmake_src_prepare

    # Turn off Skia in the embedded msdfgen cleanly.
    # - Demote REQUIRED -> QUIET for both finders
    # - Default option OFF (and override any forced ON)
    # - Neutralize if()/elseif(MSDFGEN_USE_SKIA) without breaking endif nesting
    pushd msdfgen >/dev/null || die
    sed -i -r \
        -e 's/find_package\(\s*unofficial-skia[^)]*\)/find_package(unofficial-skia QUIET)/Ig' \
        -e 's/find_package\(\s*Skia[^)]*\)/find_package(Skia QUIET)/Ig' \
        -e 's/^[[:space:]]*option\(\s*MSDFGEN_USE_SKIA[^)]*\)/option(MSDFGEN_USE_SKIA "Use Skia" OFF)/I' \
        -e 's/^[[:space:]]*set\(\s*MSDFGEN_USE_SKIA\s+ON\s*\)/set(MSDFGEN_USE_SKIA OFF)/I' \
        -e 's/^[[:space:]]*if\(\s*MSDFGEN_USE_SKIA\s*\)/if(FALSE)/I' \
        -e 's/^[[:space:]]*elseif\(\s*MSDFGEN_USE_SKIA\s*\)/elseif(FALSE)/I' \
        CMakeLists.txt || die "patch Skia off"
    popd >/dev/null || die
}

src_configure() {
    local -a mycmakeargs=(
        -DBUILD_SHARED_LIBS=ON
        -DMSDF_ATLAS_BUILD_STANDALONE=$(usex cli ON OFF)
        -DMSDF_ATLAS_USE_VCPKG=OFF
        -DMSDF_ATLAS_USE_SKIA=OFF
        -DMSDF_ATLAS_MSDFGEN_EXTERNAL=ON
        -DMSDF_ATLAS_INSTALL=ON
        -DMSDFGEN_BUILD_STANDALONE=OFF
        -DMSDFGEN_USE_VCPKG=OFF
        -DMSDFGEN_USE_SKIA=OFF
        -DCMAKE_DISABLE_FIND_PACKAGE_unofficial-skia=ON
        -DCMAKE_DISABLE_FIND_PACKAGE_Skia=ON
        -DCMAKE_SKIP_RPATH=ON
    )
    cmake_src_configure "${mycmakeargs[@]}"
}

src_install() {
  local libdir=$(get_libdir)

  # 1) Library (only atlas gen; do NOT install bundled msdfgen libs)
  dolib.so "${BUILD_DIR}/libmsdf-atlas-gen.so" || die

  # 2) Headers (only atlas gen) - FAIL if required files are missing
  insinto /usr/include/msdf-atlas-gen

  # Install .h files
  doins "${S}"/msdf-atlas-gen/*.h || die

  # MANDATORY check: rectangle-packing.hpp MUST exist since rectangle-packing.h includes it
  if [[ ! -f "${S}/msdf-atlas-gen/rectangle-packing.hpp" ]]; then
    eerror "CRITICAL: rectangle-packing.hpp is missing from source but required by rectangle-packing.h"
    eerror "This will cause compilation failures in dependent packages like datoviz"
    eerror ""
    eerror "Files found in ${S}/msdf-atlas-gen/ with 'rectangle' in name:"
    find "${S}/msdf-atlas-gen/" -name "*rectangle*" -type f || eerror "No rectangle files found at all!"
    eerror ""
    eerror "All files in ${S}/msdf-atlas-gen/:"
    ls -la "${S}/msdf-atlas-gen/" || eerror "Could not list source directory"
    eerror ""
    die "Missing required header file rectangle-packing.hpp - upstream source issue or build problem"
  fi

  # Install .hpp files (will only reach here if rectangle-packing.hpp exists)
  doins "${S}"/msdf-atlas-gen/*.hpp || die

  # 3) CLI (if built)
  if use cli && [[ -x ${BUILD_DIR}/bin/msdf-atlas-gen ]]; then
    dobin "${BUILD_DIR}/bin/msdf-atlas-gen" || die
  fi

  # 4) Minimal CMake config so consumers can find the target
  local cmakedir="/usr/${libdir}/cmake/msdf-atlas-gen"
  insinto "${cmakedir}"
  cat > "${T}/msdf-atlas-genConfig.cmake" <<'EOF' || die
# Generated by Gentoo ebuild
if(NOT TARGET msdf-atlas-gen::msdf-atlas-gen)
  add_library(msdf-atlas-gen::msdf-atlas-gen SHARED IMPORTED)
  set_target_properties(msdf-atlas-gen::msdf-atlas-gen PROPERTIES
    IMPORTED_LOCATION "/usr/@LIBDIR@/libmsdf-atlas-gen.so"
    INTERFACE_INCLUDE_DIRECTORIES "/usr/include"
  )
endif()
EOF
  # Replace @LIBDIR@ placeholder with actual libdir
  sed -i "s|@LIBDIR@|${libdir}|g" "${T}/msdf-atlas-genConfig.cmake" || die
  doins "${T}/msdf-atlas-genConfig.cmake" || die

  # 5) Remove any RPATHs added by upstream build
  if type -P patchelf >/dev/null ; then
    patchelf --remove-rpath "${ED}/usr/${libdir}/libmsdf-atlas-gen.so" || die
    if use cli && [[ -x ${ED}/usr/bin/msdf-atlas-gen ]]; then
      patchelf --remove-rpath "${ED}/usr/bin/msdf-atlas-gen" || die
    fi
  fi

  einstalldocs
}

